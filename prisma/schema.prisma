generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  std_id   String @unique
  password String

  enrollments Enrollment[]
  Session     Session[]
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  Session Session[]
}

model Course {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  enrollments Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id Int @id @default(autoincrement())

  Student   Student @relation(fields: [studentId], references: [id])
  studentId Int

  Course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  createdAt DateTime @default(now())

  @@unique([studentId, courseId]) // Ensure that a student can't enroll in the same course more than once
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  userType  String // 'student' or 'admin'
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  // Relations
  student Student? @relation(fields: [userId], references: [id], onDelete: Cascade, map: "session_student_fkey")
  admin   Admin?   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "session_admin_fkey")

  // Ensure combination of userId and userType is unique
  @@unique([userId, userType])
}
